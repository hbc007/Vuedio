{"version":3,"sources":["webpack://vuedio/./src/players/hls.js"],"names":["HlsPlayer","tech","this","hls","Hls","attachMedia","instance","vuedio","progressiveLevels","on","Events","MANIFEST_PARSED","ev","data","levels","map","it","i","name","height","id","selected","firstLevel","callback","currentLevel","subtitlesAvailable","subtitleTracks","length","LEVEL_SWITCHED","level","Array","isArray","SUBTITLE_TRACKS_UPDATED","subtitlesEnabled","subtitleDisplay","externalSubtitles","externalSubtitlesListener","subtitlesListener","bind","event","handler","off","removeEventListener","addEventListener","destroy","enabled","duration","paused","val","pause","play","playbackRate","src","loadSource","currentTime"],"mappings":"mTAEqBA,E,WACjB,WAAYC,GAAM,uBACdC,KAAKD,KAAOA,EACZC,KAAKC,IAAM,IAAIC,IACfF,KAAKC,IAAIE,YAAYJ,G,oDA2CpBK,GAAU,WACXJ,KAAKK,OAASD,EACdJ,KAAKK,OAAOC,mBAAoB,EAChCN,KAAKC,IAAIM,GAAGL,IAAIM,OAAOC,gBAAiB,SAACC,EAAIC,GACzC,EAAKN,OAAOC,kBAERK,EAAKC,OACPC,IAAI,SAACC,EAAIC,GAAL,MACF,CACIC,KAAMF,EAAGE,MAAQF,EAAGG,OAAS,IAC7BC,GAAIH,EACJI,SAAUJ,IAAMJ,EAAKS,WACrBC,SAAU,WACN,EAAKpB,IAAIqB,aAAeP,MAIpC,EAAKV,OAAOkB,mBAAqB,EAAKtB,IAAIuB,eAAeC,OAAS,IAEtEzB,KAAKC,IAAIM,GAAGL,IAAIM,OAAOkB,eAAgB,SAAChB,EAAD,GAAmB,IAAZiB,EAAY,EAAZA,MAC1C,GAAKC,MAAMC,QAAQ,EAAKxB,OAAOC,mBAA/B,CADsD,2BAItD,YAAiB,EAAKD,OAAOC,kBAA7B,+CAAgD,KAArCQ,EAAqC,QAC5CA,EAAGK,SAAWL,EAAGI,KAAOS,GAL0B,sFAQ1D3B,KAAKC,IAAIM,GAAGL,IAAIM,OAAOsB,wBAAyB,SAACpB,EAAD,GAA4B,IAArBc,EAAqB,EAArBA,eACnD,EAAKnB,OAAOkB,mBAAqBC,EAAeC,OAAS,EACzD,EAAKpB,OAAO0B,iBAAmB,EAAK9B,IAAI+B,kBAE5ChC,KAAKK,OAAO4B,mBAAoB,EAChCjC,KAAKK,OAAO6B,0BAA4BlC,KAAKmC,kBAAkBC,KAAKpC,Q,0BAGpEqC,EAAOC,GACPtC,KAAKC,IAAIsC,IAAIF,EAAOC,GACpBtC,KAAKD,KAAKyC,oBAAoBH,EAAOC,K,yBAGtCD,EAAOC,GACNtC,KAAKC,IAAIM,GAAG8B,EAAOC,GACnBtC,KAAKD,KAAK0C,iBAAiBJ,EAAOC,K,gCAKlCtC,KAAKC,IAAIyC,Y,wCAGKC,GACd3C,KAAKC,IAAI+B,gBAAkBW,I,+BA1F3B,OAAO3C,KAAKD,KAAK6C,W,6BAIjB,OAAO5C,KAAKD,KAAK8C,Q,aAGVC,GACHA,EACA9C,KAAKD,KAAKgD,QAEV/C,KAAKD,KAAKiD,S,4BAKd,OAAOhD,KAAKD,KAAKkD,c,aAGXH,GACN9C,KAAKD,KAAKkD,aAAeH,I,0BAIzB,OAAO9C,KAAKD,KAAKmD,K,aAGbJ,GACJ9C,KAAKC,IAAIkD,WAAWL,K,gCAIpB,OAAO9C,KAAKD,KAAKqD,a,aAGPN,GACV9C,KAAKD,KAAKqD,YAAcN,M","file":"vuedio.umd.min.3.js","sourcesContent":["import Hls from 'hls.js'\r\n\r\nexport default class HlsPlayer {\r\n    constructor(tech) {\r\n        this.tech = tech\r\n        this.hls = new Hls()\r\n        this.hls.attachMedia(tech)\r\n    }\r\n\r\n    get duration() {\r\n        return this.tech.duration\r\n    }\r\n\r\n    get paused() {\r\n        return this.tech.paused\r\n    }\r\n\r\n    set paused(val) {\r\n        if (val) {\r\n            this.tech.pause()\r\n        } else {\r\n            this.tech.play()\r\n        }\r\n    }\r\n\r\n    get speed() {\r\n        return this.tech.playbackRate\r\n    }\r\n\r\n    set speed(val) {\r\n        this.tech.playbackRate = val\r\n    }\r\n\r\n    get src() {\r\n        return this.tech.src\r\n    }\r\n\r\n    set src(val) {\r\n        this.hls.loadSource(val)\r\n    }\r\n\r\n    get timestamp() {\r\n        return this.tech.currentTime\r\n    }\r\n\r\n    set timestamp(val) {\r\n        this.tech.currentTime = val\r\n    }\r\n\r\n    bind(instance) {\r\n        this.vuedio = instance\r\n        this.vuedio.progressiveLevels = true\r\n        this.hls.on(Hls.Events.MANIFEST_PARSED, (ev, data) => {\r\n            this.vuedio.progressiveLevels = (\r\n                // @ts-ignore\r\n                data.levels\r\n            ).map((it, i) => (\r\n                {\r\n                    name: it.name || it.height + 'p',\r\n                    id: i,\r\n                    selected: i === data.firstLevel,\r\n                    callback: () => {\r\n                        this.hls.currentLevel = i\r\n                    }\r\n                }\r\n            ))\r\n            this.vuedio.subtitlesAvailable = this.hls.subtitleTracks.length > 0\r\n        })\r\n        this.hls.on(Hls.Events.LEVEL_SWITCHED, (ev, { level }) => {\r\n            if (!Array.isArray(this.vuedio.progressiveLevels)) {\r\n                return\r\n            }\r\n            for (const it of this.vuedio.progressiveLevels) {\r\n                it.selected = it.id === level\r\n            }\r\n        })\r\n        this.hls.on(Hls.Events.SUBTITLE_TRACKS_UPDATED, (ev, { subtitleTracks }) => {\r\n            this.vuedio.subtitlesAvailable = subtitleTracks.length > 0\r\n            this.vuedio.subtitlesEnabled = this.hls.subtitleDisplay\r\n        })\r\n        this.vuedio.externalSubtitles = true\r\n        this.vuedio.externalSubtitlesListener = this.subtitlesListener.bind(this)\r\n    }\r\n\r\n    off(event, handler) {\r\n        this.hls.off(event, handler)\r\n        this.tech.removeEventListener(event, handler)\r\n    }\r\n\r\n    on(event, handler) {\r\n        this.hls.on(event, handler)\r\n        this.tech.addEventListener(event, handler)\r\n    }\r\n\r\n\r\n    destroy() {\r\n        this.hls.destroy()\r\n    }\r\n\r\n    subtitlesListener(enabled) {\r\n        this.hls.subtitleDisplay = enabled\r\n    }\r\n}\r\n"],"sourceRoot":""}