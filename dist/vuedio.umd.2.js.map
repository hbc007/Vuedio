{"version":3,"sources":["webpack://vuedio/util (ignored)","webpack://vuedio/./src/players/mpeg-dash.js","webpack://vuedio/util (ignored)?2174"],"names":["MpegDashPlayer","tech","dash","MediaPlayer","create","initialize","reset","event","handler","off","removeEventListener","on","addEventListener","duration","isPaused","e","val","pause","play","getSource","url","attachSource","time","seek","getPlaybackRate","setPlaybackRate"],"mappings":";;;;;AAAA,e;;;;;;;;;;;;;;;;ACAA;;IAEqBA,c;;;AACjB,0BAAYC,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYC,0DAAW,GAAGC,MAAd,EAAZ;AACA,SAAKF,IAAL,CAAUG,UAAV,CAAqBJ,IAArB;AACH;;;;8BAES;AACN,WAAKC,IAAL,CAAUI,KAAV;AACH;;;wBAMGC,K,EAAOC,O,EAAS;AAChB,WAAKN,IAAL,CAAUO,GAAV,CAAcF,KAAd,EAAqBC,OAArB;AACA,WAAKP,IAAL,CAAUS,mBAAV,CAA8BH,KAA9B,EAAqCC,OAArC;AACH;;;uBAEED,K,EAAOC,O,EAAS;AACf;AACA,WAAKN,IAAL,CAAUS,EAAV,CAAaJ,KAAb,EAAoBC,OAApB;AACA,WAAKP,IAAL,CAAUW,gBAAV,CAA2BL,KAA3B,EAAkCC,OAAlC;AACH;;;wBAbc;AACX,aAAO,KAAKN,IAAL,CAAUW,QAAV,EAAP;AACH;;;wBAaY;AACT,UAAI;AACA,eAAO,KAAKX,IAAL,CAAUY,QAAV,EAAP;AACH,OAFD,CAEE,OAAOC,CAAP,EAAU;AACR,eAAO,IAAP;AACH;AACJ,K;sBAEUC,G,EAAK;AACZ,UAAI;AACA,YAAIA,GAAJ,EAAS;AACL,eAAKd,IAAL,CAAUe,KAAV;AACH,SAFD,MAEO;AACH,eAAKf,IAAL,CAAUgB,IAAV;AACH;AACJ,OAND,CAME,OAAOH,CAAP,EAAU,CAAE;AACjB;;;wBAES;AACN,aAAO,KAAKb,IAAL,CAAUiB,SAAV,EAAP;AACH,K;sBAEOC,G,EAAK;AACT,WAAKlB,IAAL,CAAUmB,YAAV,CAAuBD,GAAvB;AACH;;;wBAEe;AACZ,UAAI;AACA,eAAO,KAAKlB,IAAL,CAAUoB,IAAV,EAAP;AACH,OAFD,CAEE,OAAOP,CAAP,EAAU;AACR,eAAO,CAAP;AACH;AACJ,K;sBAEaC,G,EAAK;AACf,WAAKd,IAAL,CAAUqB,IAAV,CAAeP,GAAf;AACH;;;wBAEW;AACR,aAAO,KAAKd,IAAL,CAAUsB,eAAV,EAAP;AACH,K;sBAESR,G,EAAK;AACX,WAAKd,IAAL,CAAUuB,eAAV,CAA0BT,GAA1B;AACH;;;;;;;;;;;;;ACxEL,e","file":"vuedio.umd.2.js","sourcesContent":["/* (ignored) */","import { MediaPlayer, MediaPlayerClass } from 'dashjs'\r\n\r\nexport default class MpegDashPlayer {\r\n    constructor(tech) {\r\n        this.tech = tech\r\n        this.dash = MediaPlayer().create()\r\n        this.dash.initialize(tech)\r\n    }\r\n\r\n    destroy() {\r\n        this.dash.reset()\r\n    }\r\n\r\n    get duration() {\r\n        return this.dash.duration()\r\n    }\r\n\r\n    off(event, handler) {\r\n        this.dash.off(event, handler)\r\n        this.tech.removeEventListener(event, handler)\r\n    }\r\n\r\n    on(event, handler) {\r\n        // @ts-ignore\r\n        this.dash.on(event, handler)\r\n        this.tech.addEventListener(event, handler)\r\n    }\r\n\r\n    get paused() {\r\n        try {\r\n            return this.dash.isPaused()\r\n        } catch (e) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    set paused(val) {\r\n        try {\r\n            if (val) {\r\n                this.dash.pause()\r\n            } else {\r\n                this.dash.play()\r\n            }\r\n        } catch (e) {}\r\n    }\r\n\r\n    get src() {\r\n        return this.dash.getSource()\r\n    }\r\n\r\n    set src(url) {\r\n        this.dash.attachSource(url)\r\n    }\r\n\r\n    get timestamp() {\r\n        try {\r\n            return this.dash.time()\r\n        } catch (e) {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    set timestamp(val) {\r\n        this.dash.seek(val)\r\n    }\r\n\r\n    get speed() {\r\n        return this.dash.getPlaybackRate()\r\n    }\r\n\r\n    set speed(val) {\r\n        this.dash.setPlaybackRate(val)\r\n    }\r\n}\r\n","/* (ignored) */"],"sourceRoot":""}